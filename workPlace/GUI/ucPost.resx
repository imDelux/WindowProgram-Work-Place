<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picAddPost.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>